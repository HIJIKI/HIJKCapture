//--------------------------------------------------------------------------------------------------
//= hjkLineモジュール
//--------------------------------------------------------------------------------------------------
	#define hjkLine(%1=0, %2=0, %3=ginfo_cx, %4=ginfo_cy, %5=1)		_hjkLine %1, %2, %3, %4, %5

	#module _hjkLine_
		//----------------------------------------------------------------------------------------------
		//= 使用ライブラリの登録
		//----------------------------------------------------------------------------------------------
			#uselib "gdi32.dll"
				#func CreatePen "CreatePen" int, int, int
				#func SelectObject "SelectObject" int,int
				#func Polyline "Polyline" int, var, int
				#func DeleteObject "DeleteObject" int
				#define ctype RGB(%1,%2,%3)		((%3*65536)+(%2*256)+%1)
		//----------------------------------------------------------------------------------------------
		//= 改良line命令
		//----------------------------------------------------------------------------------------------
		//	hjkLine p1, p2, p3, p4, p5
		//
		//	p1=0〜(0)			: ラインの終点X座標
		//	p2=0〜(0)			: ラインの終点Y座標
		//	p3=0〜(ginfo_cx)	: ラインの始点X座標
		//	p4=0〜(ginfo_cy)	: ラインの始点Y座標
		//	p5=1〜(1)			: ラインの太さ
		//----------------------------------------------------------------------------------------------
		//	基本的に HSP標準命令の [line] と同じような使い方です。
		//	p5 にピクセル単位で太さを設定することができます。
		//
		//	描画を反映するにはredraw命令を実行する必要があります。
		//----------------------------------------------------------------------------------------------
			#deffunc _hjkLine int _ex, int _ey, int _sx, int _sy, int _size
				//ペン形状設定
				CreatePen 0, _size, RGB(ginfo_r, ginfo_g, ginfo_b)
				hPen = stat
				if( stat == 0 ){
					dialog "ペン設定に失敗しました。"
					return 1
				}
				//ライン描画
				dim p, 4
				p = _ex, _ey, _sx, _sy
				SelectObject hdc, hPen
				hOldPen = stat
				Polyline hdc, p, 2
				if( stat == 0 ){
					dialog "描画に失敗しました。"
					return 1
				}
				DeleteObject hPen
				SelectObject hdc, hOldPen
			return 0
	#global

//--------------------------------------------------------------------------------------------------
//= 以下サンプル
//--------------------------------------------------------------------------------------------------
#if 0
	*__main
		redraw 0

		stick ky, 256
		if( ky & 256 ){
			hjkLine mousex, mousey, x, y, 16
		}
		x = mousex
		y = mousey

		redraw 1
		wait 1
	goto *__main
#endif